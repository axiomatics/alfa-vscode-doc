{"componentChunkName":"component---node-modules-smooth-doc-src-templates-doc-js","path":"/docs/alfa-reference/function-declarations/","result":{"data":{"mdx":{"fields":{"pageType":"doc","title":"Function declarations","editLink":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Function declarations\",\n  \"section\": \"AlfaÂ Reference\",\n  \"order\": 6\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"function-declarations\"\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#function-declarations\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Function declarations\"), mdx(\"p\", null, \"Function declarations give short names to XACML functions and declare their argument types so the compiler can perform type checking and type inference for operator overloading. System.alfa contains declarations for all the standard functions, so in most cases users do not need to declare any functions.\"), mdx(\"p\", null, \"Here is an example of a function declaration:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-alfa\"\n  }, \"function stringEqual = \\\"urn:oasis:names:tc:xacml:1.0:function:string-equal\\\"\\n\\xA0\\xA0\\xA0\\xA0\\xA0: string string -> boolean\\n\")), mdx(\"p\", null, \"The declaration consists of the short name, the full XACML identifier and the number and types of the arguments and the type of the return value.\"), mdx(\"p\", null, \"The possible argument types are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An atomic type that has been declared somewhere\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: string\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A bag of a type that has been declared somewhere\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: bag\", \"[string]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any atomic type\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"anyAtomic\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A bag of any type\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bag\", \"[anyAtomic]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any atomic or bag type\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"anyAtomicOrBag\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A function identifier reference\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"function\")))), mdx(\"p\", null, \"In addition, the last argument may be marked with a \\\"\", \"*\", \"\\\" to indicate that it may appear as a zero or any number of times.\"), mdx(\"p\", null, \"Here is a more complex example of a function declaration:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-alfa\"\n  }, \"function anyOf = \\\"urn:oasis:names:tc:xacml:1.0:function:any-of\\\"\\n\\xA0\\xA0\\xA0\\xA0\\xA0: function anyAtomic bag[anyAtomic] -> boolean\\n\")), mdx(\"p\", null, \"This defines the standard anyOf function from XACML 1.0. It takes three arguments, the first one being a function reference, the second any atomic value and the third any bag value. Use of this function could look like the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-alfa\"\n  }, \"any-of(function[stringEquals], \\\"doctor\\\", Attributes.role)\\n\")), mdx(\"p\", null, \"Note that the type declaration is unable to express that for anyOf, as the argument types of the input function (\\\"stringEquals\\\") must match the types of the two other arguments. This limitation is there in order to keep the function declaration syntax reasonably simple.\"), mdx(\"p\", null, \"Here is another example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-alfa\"\n  }, \"function anyOfAny3 = \\\"urn:oasis:names:tc:xacml:3.0:function:any-of-any\\\"\\n\\xA0\\xA0\\xA0\\xA0\\xA0: function anyAtomicOrBag anyAtomicOrBag* -> boolean\\n\")), mdx(\"p\", null, \"This is the XACML 3.0 generalized any-of-any function. It accepts a wider range of arguments than the 1.0 version. The first argument is a function reference and then there must be at least one more argument for any atomic or bag type.\"), mdx(\"p\", null, \"The possible return value declarations are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An atomic type that has been declared somewhere\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: string\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A bag of a type that has been declared somewhere\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example: bag\", \"[string]\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any atomic type\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"anyAtomic\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A bag of any type\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bag\", \"[anyAtomic]\")))), mdx(\"p\", null, \"Note that in contrast to the input arguments, the function reference and any atomic or bag type are not allowed.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#function-declarations","title":"Function declarations"}]}}},"pageContext":{"id":"594f94f8-1daa-5db8-be0c-662bae64edab"}},"staticQueryHashes":["1122327541","1401783372","2140385554","3587637372","4275725850","918285632"]}